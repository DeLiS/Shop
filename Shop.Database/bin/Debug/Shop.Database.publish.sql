/*
Deployment script for Shop.Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Shop.Database"
:setvar DefaultFilePrefix "Shop.Database"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[BillParts]...';


GO
CREATE TABLE [dbo].[BillParts] (
    [id]                 INT    IDENTITY (1, 1) NOT NULL,
    [bill]               BIGINT NOT NULL,
    [item]               BIGINT NOT NULL,
    [quantity]           INT    NOT NULL,
    [price_for_one_item] MONEY  NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[Bills]...';


GO
CREATE TABLE [dbo].[Bills] (
    [id]        BIGINT   IDENTITY (1, 1) NOT NULL,
    [seller]    BIGINT   NOT NULL,
    [customer]  BIGINT   NOT NULL,
    [sell_time] DATETIME NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[Customers]...';


GO
CREATE TABLE [dbo].[Customers] (
    [id]       BIGINT     IDENTITY (1, 1) NOT NULL,
    [person]   BIGINT     NOT NULL,
    [discount] FLOAT (53) NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[Employees]...';


GO
CREATE TABLE [dbo].[Employees] (
    [id]       BIGINT IDENTITY (1, 1) NOT NULL,
    [person]   BIGINT NOT NULL,
    [hired_on] DATE   NOT NULL,
    [fired_on] DATE   NULL,
    [salary]   MONEY  NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[ItemDescriptions]...';


GO
CREATE TABLE [dbo].[ItemDescriptions] (
    [id]          BIGINT         IDENTITY (1, 1) NOT NULL,
    [name]        NVARCHAR (100) NOT NULL,
    [description] NVARCHAR (100) NOT NULL,
    [item_group]  BIGINT         NOT NULL,
    [unit]        BIGINT         NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[ItemGroups]...';


GO
CREATE TABLE [dbo].[ItemGroups] (
    [id]           BIGINT         IDENTITY (1, 1) NOT NULL,
    [group_name]   NVARCHAR (100) NOT NULL,
    [parent_group] BIGINT         NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[Items]...';


GO
CREATE TABLE [dbo].[Items] (
    [id]               BIGINT IDENTITY (1, 1) NOT NULL,
    [item_description] BIGINT NOT NULL,
    [item_state]       BIGINT NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[ItemStates]...';


GO
CREATE TABLE [dbo].[ItemStates] (
    [id]            BIGINT   IDENTITY (1, 1) NOT NULL,
    [quantity]      INT      NOT NULL,
    [price_for_one] MONEY    NOT NULL,
    [changed_on]    DATETIME NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[People]...';


GO
CREATE TABLE [dbo].[People] (
    [id]           BIGINT         IDENTITY (1, 1) NOT NULL,
    [first_name]   NVARCHAR (100) NOT NULL,
    [last_name]    NVARCHAR (100) NOT NULL,
    [phone_number] NVARCHAR (15)  NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating [dbo].[Units]...';


GO
CREATE TABLE [dbo].[Units] (
    [id]            BIGINT         IDENTITY (1, 1) NOT NULL,
    [full_name]     NVARCHAR (100) NOT NULL,
    [short_name]    NVARCHAR (100) NOT NULL,
    [plural_suffix] NVARCHAR (50)  NOT NULL,
    PRIMARY KEY CLUSTERED ([id] ASC)
);


GO
PRINT N'Creating FK_BillPart_ToBill...';


GO
ALTER TABLE [dbo].[BillParts]
    ADD CONSTRAINT [FK_BillPart_ToBill] FOREIGN KEY ([bill]) REFERENCES [dbo].[Bills] ([id]);


GO
PRINT N'Creating FK_BillPart_ToItems...';


GO
ALTER TABLE [dbo].[BillParts]
    ADD CONSTRAINT [FK_BillPart_ToItems] FOREIGN KEY ([item]) REFERENCES [dbo].[Items] ([id]);


GO
PRINT N'Creating FK_Bill_ToEmployees...';


GO
ALTER TABLE [dbo].[Bills]
    ADD CONSTRAINT [FK_Bill_ToEmployees] FOREIGN KEY ([seller]) REFERENCES [dbo].[Employees] ([id]);


GO
PRINT N'Creating FK_Bill_ToCustomers...';


GO
ALTER TABLE [dbo].[Bills]
    ADD CONSTRAINT [FK_Bill_ToCustomers] FOREIGN KEY ([customer]) REFERENCES [dbo].[Customers] ([id]);


GO
PRINT N'Creating FK_Customers_ToPeople...';


GO
ALTER TABLE [dbo].[Customers]
    ADD CONSTRAINT [FK_Customers_ToPeople] FOREIGN KEY ([person]) REFERENCES [dbo].[People] ([id]);


GO
PRINT N'Creating FK_Employees_ToPeople...';


GO
ALTER TABLE [dbo].[Employees]
    ADD CONSTRAINT [FK_Employees_ToPeople] FOREIGN KEY ([person]) REFERENCES [dbo].[People] ([id]);


GO
PRINT N'Creating FK_Item_ToItemGroups...';


GO
ALTER TABLE [dbo].[ItemDescriptions]
    ADD CONSTRAINT [FK_Item_ToItemGroups] FOREIGN KEY ([item_group]) REFERENCES [dbo].[ItemGroups] ([id]);


GO
PRINT N'Creating FK_Item_ToUnits...';


GO
ALTER TABLE [dbo].[ItemDescriptions]
    ADD CONSTRAINT [FK_Item_ToUnits] FOREIGN KEY ([unit]) REFERENCES [dbo].[Units] ([id]);


GO
PRINT N'Creating FK_ItemGroups_ToItemGroups...';


GO
ALTER TABLE [dbo].[ItemGroups]
    ADD CONSTRAINT [FK_ItemGroups_ToItemGroups] FOREIGN KEY ([parent_group]) REFERENCES [dbo].[ItemGroups] ([id]);


GO
PRINT N'Creating FK_Items_ToItemDescriptions...';


GO
ALTER TABLE [dbo].[Items]
    ADD CONSTRAINT [FK_Items_ToItemDescriptions] FOREIGN KEY ([item_description]) REFERENCES [dbo].[ItemDescriptions] ([id]);


GO
PRINT N'Creating FK_Items_ToItemStates...';


GO
ALTER TABLE [dbo].[Items]
    ADD CONSTRAINT [FK_Items_ToItemStates] FOREIGN KEY ([item_state]) REFERENCES [dbo].[ItemStates] ([id]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '142219b7-9b02-4391-811d-dd7f541ffc84')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('142219b7-9b02-4391-811d-dd7f541ffc84')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8e5e3b18-3302-48d3-87b8-4b780af722e4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8e5e3b18-3302-48d3-87b8-4b780af722e4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '68157ea6-1d9e-4a11-bde2-97bdb512eda0')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('68157ea6-1d9e-4a11-bde2-97bdb512eda0')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '46e62fff-8b59-443b-bd0f-7ae97dd8088c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('46e62fff-8b59-443b-bd0f-7ae97dd8088c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '68a92be4-70b0-46b2-95b6-34360e521a25')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('68a92be4-70b0-46b2-95b6-34360e521a25')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6cf93e3d-c99f-4ec7-a04b-f6ddc708147e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6cf93e3d-c99f-4ec7-a04b-f6ddc708147e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5e13d709-7509-46f6-85d8-d57b443006d9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5e13d709-7509-46f6-85d8-d57b443006d9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '43dc4256-70ac-45f5-a12c-b7bbcc4901e3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('43dc4256-70ac-45f5-a12c-b7bbcc4901e3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b4f4d2fc-d885-440a-8d5e-ee6408017689')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b4f4d2fc-d885-440a-8d5e-ee6408017689')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'eefc221e-fd40-4034-88ab-d8d82dc25e91')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('eefc221e-fd40-4034-88ab-d8d82dc25e91')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '224eefd4-2832-48c6-965e-945ae6b8cbfd')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('224eefd4-2832-48c6-965e-945ae6b8cbfd')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e2e783a2-cf43-4369-9cc7-831656a51c71')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e2e783a2-cf43-4369-9cc7-831656a51c71')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b74ccbee-5bcd-4cb7-b43c-771a52fa6cc6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b74ccbee-5bcd-4cb7-b43c-771a52fa6cc6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '635b75b2-8651-44c2-a848-4e556d048be3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('635b75b2-8651-44c2-a848-4e556d048be3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e41e9f65-e20c-4e4c-8f5a-5acadaff71e4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e41e9f65-e20c-4e4c-8f5a-5acadaff71e4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1d34371c-550d-4af2-9056-84ffb2715a29')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1d34371c-550d-4af2-9056-84ffb2715a29')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7555ecb7-766a-4cd3-9634-5e6857185f45')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7555ecb7-766a-4cd3-9634-5e6857185f45')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '989c9580-664a-4d70-8876-f591a1c31dd3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('989c9580-664a-4d70-8876-f591a1c31dd3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cffc6c9b-ed21-41ac-b67f-7f8b21c7a4c7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cffc6c9b-ed21-41ac-b67f-7f8b21c7a4c7')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9f3cf809-4ca6-4fad-9851-e050aa99b2c5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9f3cf809-4ca6-4fad-9851-e050aa99b2c5')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8b8ea1b3-3cb5-4040-9921-378155d4b36a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8b8ea1b3-3cb5-4040-9921-378155d4b36a')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.'
GO
